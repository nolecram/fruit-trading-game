<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Fruit Trading Game</title>
    <link rel="stylesheet" href="styles.css">
    <!-- Favicon -->
    <link rel="icon" href="data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 100 100%22><text y=%22.9em%22 font-size=%2290%22>üçé</text></svg>">
    <!-- Add Google Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700;800&display=swap" rel="stylesheet">
    <!-- Add Chart.js for price history visualization -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        body {
            font-family: 'Poppins', sans-serif;
            background-color: #f0f8ff;
            color: #1a365d;
            margin: 0;
            padding: 20px;
            text-align: center;
            font-size: 18px;
        }

        /* Dark mode specific inline styles for better visibility */
        body.dark-mode .rules {
            background-color: rgba(45, 52, 70, 0.9);
            color: #f0f5ff;
            border-left: 5px solid #3498db;
        }

        body.dark-mode .rules p {
            color: #f0f5ff;
        }

        body.dark-mode .rules li {
            color: #f0f5ff;
        }

        body.dark-mode #landing-page {
            background-color: rgba(30, 39, 46, 0.95);
        }

        body.dark-mode .copyright {
            color: #a0aec0;
        }

        body.dark-mode #event-display {
            background-color: rgba(52, 73, 94, 0.9);
            color: #f0f5ff;
            border: 1px solid #3498db;
        }

        /* Improved game info text visibility for dark mode */
        body.dark-mode #game-info p {
            color: #f0f5ff;
            text-shadow: 0 1px 3px rgba(0, 0, 0, 0.3);
        }

        body.dark-mode #inventory-list li, 
        body.dark-mode #market-inventory-list li {
            background-color: rgba(52, 73, 94, 0.9);
            color: #f0f5ff;
            border-left-color: #3498db;
        }
        
        .button-group {
            margin: 15px 0;
            display: flex;
            justify-content: center;
            gap: 15px;
        }
        
        .button-group button {
            padding: 12px 24px; /* Larger buttons */
            background-color: #3498db;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 18px; /* Larger font */
        }
        
        .button-group button:hover {
            background-color: #2980b9;
        }
        
        #event-display {
            background: linear-gradient(135deg, #ff9800 0%, #ff7043 100%);
            color: #1a365d;
            font-weight: 700;
            font-size: 1.3rem;
            padding: 18px 30px;
            margin: 25px auto 30px;
            border-radius: 12px;
            box-shadow: 0 8px 20px rgba(255, 152, 0, 0.3);
            position: sticky;
            top: 15px;
            max-width: 90%;
            transition: all 0.3s ease;
            transform: translateZ(0);
            overflow: hidden;
            border-left: 6px solid #e65100;
            animation: eventPulse 2.5s infinite;
            display: flex;
            align-items: center;
            justify-content: center;
            z-index: 100;
        }

        #event-display::before {
            content: "üéØ";
            font-size: 1.8rem;
            margin-right: 15px;
            animation: eventIconSpin 3s infinite alternate;
        }

        #event-display::after {
            content: "";
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.3), transparent);
            transform: translateX(-100%);
            animation: eventShimmer 3s infinite;
            z-index: -1;
        }

        @keyframes eventPulse {
            0% { transform: scale(1); }
            50% { transform: scale(1.02); }
            100% { transform: scale(1); }
        }

        @keyframes eventIconSpin {
            0% { transform: rotateY(0deg); }
            100% { transform: rotateY(360deg); }
        }

        @keyframes eventShimmer {
            0% { transform: translateX(-100%); }
            100% { transform: translateX(100%); }
        }

        #event-display:hover {
            transform: translateY(-3px) scale(1.02);
            box-shadow: 0 12px 25px rgba(255, 152, 0, 0.4);
        }

        body.dark-mode #event-display {
            background: linear-gradient(135deg, #ff6f00 0%, #ff4500 100%);
            color: #fff;
            text-shadow: 0 1px 3px rgba(0, 0, 0, 0.3);
            border-left: 6px solid #ff3d00;
            box-shadow: 0 8px 20px rgba(255, 69, 0, 0.4);
        }

        body.dark-mode #event-display::after {
            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
        }

        /* Event display for mobile */
        @media (max-width: 768px) {
            #event-display {
                font-size: 1.1rem;
                padding: 15px 20px;
                margin: 15px auto 20px;
            }
            
            #event-display::before {
                font-size: 1.5rem;
                margin-right: 10px;
            }
        }
        
        /* 3D Title Effect with Rainbow Animation */
        .welcome-title-3d {
            font-size: 4rem;
            font-weight: bold;
            text-shadow: 
                0 1px 0 #cccccc, 
                0 2px 0 #c9c9c9, 
                0 3px 0 #bbb, 
                0 4px 0 #b9b9b9, 
                0 5px 0 #aaa, 
                0 6px 1px rgba(0,0,0,.1), 
                0 0 5px rgba(0,0,0,.1), 
                0 1px 3px rgba(0,0,0,.3), 
                0 3px 5px rgba(0,0,0,.2), 
                0 5px 10px rgba(0,0,0,.25), 
                0 10px 10px rgba(0,0,0,.2), 
                0 20px 20px rgba(0,0,0,.15);
            margin-bottom: 2rem;
            background-clip: text;
            -webkit-background-clip: text;
            color: transparent;
            animation: 
                title-animation 3s infinite alternate,
                rainbow-colors 8s linear infinite;
            transition: transform 0.3s;
        }
        
        @keyframes rainbow-colors {
            0% { background-color: #ff0000; background-image: linear-gradient(45deg, #ff0000, #ff9900); }
            14% { background-color: #ff9900; background-image: linear-gradient(45deg, #ff9900, #ffff00); }
            28% { background-color: #ffff00; background-image: linear-gradient(45deg, #ffff00, #33cc33); }
            42% { background-color: #33cc33; background-image: linear-gradient(45deg, #33cc33, #3399ff); }
            57% { background-color: #3399ff; background-image: linear-gradient(45deg, #3399ff, #6633cc); }
            71% { background-color: #6633cc; background-image: linear-gradient(45deg, #6633cc, #cc33cc); }
            85% { background-color: #cc33cc; background-image: linear-gradient(45deg, #cc33cc, #ff0066); }
            100% { background-color: #ff0066; background-image: linear-gradient(45deg, #ff0066, #ff0000); }
        }
        
        @keyframes title-animation {
            from { transform: perspective(400px) rotateX(5deg) rotateY(-5deg); }
            to { transform: perspective(400px) rotateX(5deg) rotateY(5deg); }
        }
        
        .welcome-title-3d:hover {
            transform: scale(1.05);
        }

        #landing-page, #game-container, #daily-prompt, #victory-page, #loss-page {
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
        }

        #landing-page {
            background-color: rgba(255, 255, 255, 0.9);
            border-radius: 15px;
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);
            padding: 30px;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            min-height: 85vh; /* Make it take up most of the viewport height */
            margin: 0 auto;
        }

        .rules {
            text-align: left;
            display: inline-block;
            margin: 30px auto;
            font-size: 20px;
            max-width: 600px;
        }

        <button id="start-game-button" class="game-button">üöÄ Start Trading!</button>
        <p class="copyright">&copy; 2025 Fruit Trading Game</p>
    </div>

    <div id="game-container" style="display: none;">
        <div id="event-display">No events yet</div>
        
        <div id="game-info">
            <p id="money">Money: $100</p>
            <p id="days-left">Days Left: 30</p>
            
            <div class="button-group" style="margin: 0;">
                <button id="buy-button" class="game-button">Buy</button>
                <button id="sell-button" class="game-button">Sell</button>
            </div>
        </div>
        
        <div class="game-grid">
            <div class="inventory-column">
                <div class="tab-section">
                    <h3>Market Inventory</h3>
                    <ul id="market-inventory-list"></ul>
                </div>
                
                <div class="tab-section">
                    <h2>Your Inventory</h2>
                    <ul id="inventory-list"></ul>
                </div>
            </div>
            
            <div class="market-column">
                <div class="tab-section">
                    <h3>Price Trends</h3>
                    <div class="chart-container">
                        <canvas id="priceHistoryChart"></canvas>
                    </div>
                </div>
                
                <div class="tab-section">
                    <h3>Market Tips</h3>
                    <div id="market-tips" class="market-tips-content"></div>
                </div>
            </div>
        </div>
    </div>

    <div id="daily-prompt" style="display: none;">
        <p>Would you like to continue to the next day?</p>
        <button id="next-day-button" class="game-button">Next Day</button>
    </div>
    
    <!-- Victory page -->
    <div id="victory-page" style="display: none;">
        <h1>Victory!</h1>
        <div class="emoji">üéâ</div>
        <p>Congratulations! You've successfully made a profit in the fruit trading market!</p>
        <p id="victory-money"></p>
        <button class="replay-button" id="replay-button-victory">Play Again</button>
    </div>
    
    <!-- Loss page -->
    <div id="loss-page" style="display: none;">
        <h1>Game Over</h1>
        <div class="emoji">üò¢</div>
        <p>Better luck next time! You weren't able to make a profit this time.</p>
        <p id="loss-money"></p>
        <button class="replay-button" id="replay-button-loss">Try Again</button>
    </div>
</div>

<!-- Background Music -->
<audio id="background-music" preload="auto">
    <source src="https://www.chosic.com/wp-content/uploads/2020/07/The-Bards-Tale.mp3" type="audio/mp3">
    <source src="https://www.soundhelix.com/examples/mp3/SoundHelix-Song-1.mp3" type="audio/mp3">
    <source src="audio/fallback.mp3" type="audio/mp3">
    Your browser does not support the audio element.
</audio>

<!-- Sound test audio -->
<audio id="test-sound" src="https://assets.codepen.io/3685267/success-sound-effect.mp3" preload="auto"></audio>

<!-- Super compact music controls -->
<div class="music-controls">
    <button id="music-play" title="Play">‚ñ∂</button>
    <button id="music-pause" title="Pause" style="display: none;">‚è∏</button>
    <button id="music-volume-up" title="Vol+">+</button>
    <button id="music-volume-down" title="Vol-">-</button>
    <button id="sound-test-button" title="Test">üîä</button>
</div>

<!-- Dark mode toggle button -->
<div class="theme-toggle">
    <button id="theme-toggle-button" title="Toggle Light/Dark Mode">
        <span id="light-mode-icon">‚òÄÔ∏è</span>
        <span id="dark-mode-icon" style="display: none;">üåô</span>
    </button>
    <span id="theme-status">Light Mode</span>
</div>

<!-- Sound test dialog -->
<div class="overlay" id="overlay" style="display: none;"></div>
<div class="sound-test-dialog" id="sound-test-dialog" style="display: none;">
    <h2>Sound Test</h2>
    <p>Let's troubleshoot your audio issues:</p>
    
    <div>
        <label for="volume-slider">Volume:</label>
        <input type="range" id="volume-slider" min="0" max="1" step="0.1" value="1">
        <span id="volume-value">100%</span>
    </div>
    
    <button id="test-sound-button">Play Test Sound</button>
    <button id="test-music-button">Test Background Music</button>
    
    <div class="sound-test-results" id="sound-test-results">
        <p>Status: Ready to test</p>
    </div>
    
    <p>Common fixes:</p>
    <ul>
        <li>Check if your device volume is not muted</li>
        <li>Try using headphones</li>
        <li>Allow browser permission for audio</li>
        <li>Restart your browser</li>
    </ul>
    
    <button id="close-test-dialog">Close</button>
</div>

<script src="scripts/game.js"></script>
<script src="scripts/theme.js"></script>
<script>
    // Wait for full document load
    document.addEventListener('DOMContentLoaded', function() {
        // Background music controls
        const backgroundMusic = document.getElementById('background-music');
        const testSound = document.getElementById('test-sound');
        const playButton = document.getElementById('music-play');
        const pauseButton = document.getElementById('music-pause');
        const volumeUpButton = document.getElementById('music-volume-up');
        const volumeDownButton = document.getElementById('music-volume-down');
        const soundTestButton = document.getElementById('sound-test-button');
        const soundTestDialog = document.getElementById('sound-test-dialog');
        const overlay = document.getElementById('overlay');
        const closeTestDialogButton = document.getElementById('close-test-dialog');
        const testSoundButton = document.getElementById('test-sound-button');
        const testMusicButton = document.getElementById('test-music-button');
        const volumeSlider = document.getElementById('volume-slider');
        const volumeValue = document.getElementById('volume-value');
        const soundTestResults = document.getElementById('sound-test-results');
        
        let isMusicPlaying = false;
        
        // Music tracks
        const funnyBackgroundMusic = [
            "https://www.chosic.com/wp-content/uploads/2020/07/The-Bards-Tale.mp3",
            "https://www.soundhelix.com/examples/mp3/SoundHelix-Song-1.mp3",
            "https://www.chosic.com/wp-content/uploads/2020/05/Komiku_-_12_-_Bicycle.mp3",
        #start-game-button {
            padding: 15px 30px;
            background-color: #1e88e5;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 20px;
            margin-top: 30px;
            margin-bottom: 30px;
            transition: transform 0.2s, background-color 0.2s;
            /* Ensure it's in the center */
            display: block;
            margin-left: auto;
            margin-right: auto;
        }

        .copyright {
            margin-top: auto; /* Push to the bottom of the flex container */
            padding-top: 20px;
            font-size: 14px;
            color: #777;
        }

        #inventory-list, #market-inventory-list {
            list-style-type: none;
            padding: 0;
            margin: 20px 0;
        }

        #inventory-list li, #market-inventory-list li {
            padding: 10px;
            margin: 5px 0;
            background-color: #f9f9f9;
            border-radius: 5px;
            font-size: 18px;
        }

        #game-info p {
            font-size: 22px;
            font-weight: bold;
            margin: 10px 0;
        }

        .copyright {
            margin-top: 30px;
            font-size: 14px;
            color: #777;
        }
        
        /* Victory/Loss Pages */
        @keyframes celebrate {
            0% { transform: scale(1); }
            50% { transform: scale(1.1); }
            100% { transform: scale(1); }
        }
        
        @keyframes sadShake {
            0% { transform: translateX(0); }
            25% { transform: translateX(-5px); }
            50% { transform: translateX(5px); }
            75% { transform: translateX(-5px); }
            100% { transform: translateX(0); }
        }
        
        #victory-page, #loss-page {
            display: none;
            text-align: center;
            padding: 2rem;
            margin-top: 2rem;
        }
        
        #victory-page h1 {
            color: #4caf50;
            animation: celebrate 1s ease-in-out infinite;
            font-size: 3rem;
        }
        
        #loss-page h1 {
            color: #f44336;
            animation: sadShake 2s ease-in-out infinite;
            font-size: 3rem;
        }
        
        .emoji {
            font-size: 8rem;
            margin: 1rem 0;
        }
        
        .replay-button {
            background-color: #1e88e5;
            color: white;
            border: none;
            border-radius: 4px;
            padding: 15px 30px;
            font-size: 20px;
            cursor: pointer;
            margin-top: 2rem;
        }
        
        .replay-button:hover {
            background-color: #1565c0;
            transform: scale(1.05);
        }
        
        /* Sound test dialog */
        .sound-test-dialog {
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background-color: white;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 5px 20px rgba(0, 0, 0, 0.3);
            z-index: 1000;
            max-width: 500px;
            width: 90%;
            display: none;
        }
        
        .sound-test-dialog h2 {
            margin-top: 0;
            color: #1e88e5;
        }
        
        .sound-test-dialog button {
            background-color: #1e88e5;
            color: white;
            border: none;
            border-radius: 5px;
            padding: 10px 15px;
            margin: 10px 5px;
            cursor: pointer;
            font-size: 16px;
        }
        
        .sound-test-dialog button:hover {
            background-color: #1565c0;
        }
        
        .sound-test-dialog #volume-slider {
            width: 100%;
            margin: 15px 0;
        }
        
        .sound-test-results {
            margin-top: 15px;
            padding: 10px;
            background-color: #f5f5f5;
            border-radius: 5px;
            text-align: left;
        }
        
        .overlay {
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: rgba(0, 0, 0, 0.5);
            z-index: 999;
            display: none;
        }
        
        /* Additional styles to be integrated into styles.css later */
        .fruit-icon-wrapper {
            display: flex;
            justify-content: space-around;
            width: 100%;
            margin: 20px 0;
        }
        
        .fruit-icon {
            font-size: 4rem;
            animation: float 3s ease-in-out infinite;
            margin: 0 15px;
            filter: drop-shadow(0 5px 15px rgba(0,0,0,0.1));
        }
        
        @keyframes float {
            0% { transform: translateY(0px) rotate(0deg); }
            50% { transform: translateY(-15px) rotate(5deg); }
            100% { transform: translateY(0px) rotate(0deg); }
        }
        
        .game-tagline {
            font-size: 1.5rem;
            color: #3498db;
            margin-top: 0;
            margin-bottom: 2rem;
            font-weight: 500;
            text-align: center;
        }

        /* Dark Mode Toggle Styling */
        .theme-toggle {
            position: fixed;
            top: 20px;
            right: 20px;
            display: flex;
            align-items: center;
            gap: 10px;
            z-index: 100;
            background-color: rgba(30, 136, 229, 0.9);
            padding: 10px 20px;
            border-radius: 30px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
            transition: all 0.3s ease;
            color: white;
        }
        
        .theme-toggle:hover {
            transform: translateY(-3px);
            box-shadow: 0 6px 20px rgba(0, 0, 0, 0.3);
        }
        
        .theme-toggle button {
            background-color: white;
            color: #1e88e5;
            border: none;
            border-radius: 50%;
            width: 45px;
            height: 45px;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            font-size: 24px;
            transition: all 0.2s ease;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        }
        
        .theme-toggle button:hover {
            transform: scale(1.1);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        }
        
        #theme-status {
            font-size: 16px;
            font-weight: bold;
            white-space: nowrap;
        }
        
        body.dark-mode .theme-toggle {
            background-color: rgba(52, 73, 94, 0.9);
        }
        
        body.dark-mode .theme-toggle button {
            background-color: #2c3e50;
            color: #f0f5ff;
        }

        #game-container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }

        @media (min-width: 1400px) {
            #game-container {
                max-width: 1400px;
            }
        }

        @media (max-width: 768px) {
            #game-container {
                padding: 10px;
            }
        }

        /* Add these styles for enhanced event animations */
        .event-active {
            animation: eventAppear 0.5s forwards;
        }

        @keyframes eventAppear {
            0% { opacity: 0; transform: translateY(-20px) scale(0.95); }
            100% { opacity: 1; transform: translateY(0) scale(1); }
        }

        .event-important {
            animation: eventHighlight 3s ease;
        }

        @keyframes eventHighlight {
            0% { transform: scale(1); }
            10% { transform: scale(1.05); }
            20% { transform: scale(1); }
            30% { transform: scale(1.05); }
            40% { transform: scale(1); }
            50% { transform: scale(1.05); box-shadow: 0 0 30px rgba(255, 152, 0, 0.7); }
            100% { transform: scale(1); }
        }

        .event-icon {
            font-size: 1.8rem;
            margin-right: 15px;
            display: inline-block;
        }

        .dark-mode .event-important {
            animation: eventHighlightDark 3s ease;
        }

        @keyframes eventHighlightDark {
            0% { transform: scale(1); }
            10% { transform: scale(1.05); }
            20% { transform: scale(1); }
            30% { transform: scale(1.05); }
            40% { transform: scale(1); }
            50% { transform: scale(1.05); box-shadow: 0 0 30px rgba(255, 69, 0, 0.7); }
            100% { transform: scale(1); }
        }

        /* Add these styles for the four tab layout */
        .game-grid {
            display: grid;
            grid-template-columns: 1fr 1fr; /* Equal columns */
            gap: 20px;
            margin: 15px auto;
            max-width: 95%;
            align-items: start;
            justify-content: center;
        }

        .inventory-column, .market-column {
            padding: 15px;
            border-radius: 10px;
            box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1);
            display: flex;
            flex-direction: column;
            gap: 20px /* Increased gap between tab sections */;
            background-color: rgba(255, 255, 255, 0.8);
        }

        /* Tab section styling */
        .tab-section {
            background-color: rgba(255, 255, 255, 0.9);
            border-radius: 8px;
            box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);
            padding: 15px;
            transition: all 0.3s ease;
        }

        .tab-section:hover {
            transform: translateY(-3px);
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
        }

        /* Tab headers */
        .tab-section h2, .tab-section h3 {
            text-align: center;
            color: #1a365d;
            font-weight: 700;
            font-size: 1.2rem;
            margin-top: 0;
            margin-bottom: 12px;
            padding-bottom: 8px;
            border-bottom: 2px solid #90caf9;
        }

        .chart-container {
            min-height: 250px;
            width: 100%;
            position: relative;
        }

        /* Market tips styling */
        .market-tips-content {
            max-height: 220px;
            overflow-y: auto;
            scrollbar-width: thin;
            scrollbar-color: #3498db transparent;
        }

        /* Dark mode styles for tab sections */
        body.dark-mode .tab-section {
            background-color: rgba(45, 52, 70, 0.9);
        }

        body.dark-mode .tab-section h2, 
        body.dark-mode .tab-section h3 {
            color: #ecf0f1;
            border-bottom-color: #3498db;
        }

        body.dark-mode .inventory-column, 
        body.dark-mode .market-column {
            background-color: rgba(40, 44, 52, 0.85);
            box-shadow: 0 3px 10px rgba(0, 0, 0, 0.3);
        }
    </style>
</head>
<body>
    <main>
        <div id="landing-page">
            <h1 class="welcome-title-3d">
                <span class="title-first-line">Fruit</span>
                <span class="title-second-line">Trading Empire</span>
            </h1>
            <p class="game-tagline">Buy low, sell high, and become the ultimate fruit mogul!</p>
            
            <div class="fruit-icon-wrapper">
                <div class="fruit-icon">üçé</div>
                <div class="fruit-icon">üçå</div>
                <div class="fruit-icon">üçä</div>
                <div class="fruit-icon">üçá</div>
                <div class="fruit-icon">üçç</div>
                <div class="fruit-icon">üçì</div>
            </div>
            
            <div class="rules">
                <p>Rules of the Game:</p>
                <ul>
                    <li>You start with $100 and 30 days to trade fruits.</li>
                    <li>Fruit prices change daily, so buy low and sell high!</li>
                    <li>Random events may affect prices or your money.</li>
                    <li>Your goal is to maximize your profit by the end of 30 days.</li>
                    <li>Unlock achievements through strategic trading!</li>
                </ul>
            </div>
            <button id="start-game-button" class="game-button">üöÄ Start Trading!</button>
            <p class="copyright">&copy; 2025 Fruit Trading Game</p>
        </div>

        <div id="game-container" style="display: none;">
            <div id="event-display">No events yet</div>
            
            <div id="game-info">
                <p id="money">Money: $100</p>
                <p id="days-left">Days Left: 30</p>
                
                <div class="button-group" style="margin: 0;">
                    <button id="buy-button" class="game-button">Buy</button>
                    <button id="sell-button" class="game-button">Sell</button>
                </div>
            </div>
            
            <div class="game-grid">
                <div class="inventory-column">
                    <div class="tab-section">
                        <h3>Market Inventory</h3>
                        <ul id="market-inventory-list"></ul>
                    </div>
                    
                    <div class="tab-section">
                        <h2>Your Inventory</h2>
                        <ul id="inventory-list"></ul>
                    </div>
                </div>
                
                <div class="market-column">
                    <div class="tab-section">
                        <h3>Price Trends</h3>
                        <div class="chart-container">
                            <canvas id="priceHistoryChart"></canvas>
                        </div>
                    </div>
                    
                    <div class="tab-section">
                        <h3>Market Tips</h3>
                        <div id="market-tips" class="market-tips-content"></div>
                    </div>
                </div>
            </div>
        </div>

        <div id="daily-prompt" style="display: none;">
            <p>Would you like to continue to the next day?</p>
            <button id="next-day-button">Next Day</button>
        </div>
        
        <!-- Victory page -->
        <div id="victory-page" style="display: none;">
            <h1>Victory!</h1>
            <div class="emoji">üéâ</div>
            <p>Congratulations! You've successfully made a profit in the fruit trading market!</p>
            <p id="victory-money"></p>
            <button class="replay-button" id="replay-button-victory">Play Again</button>
        </div>
        
        <!-- Loss page -->
        <div id="loss-page" style="display: none;">
            <h1>Game Over</h1>
            <div class="emoji">üò¢</div>
            <p>Better luck next time! You weren't able to make a profit this time.</p>
            <p id="loss-money"></p>
            <button class="replay-button" id="replay-button-loss">Try Again</button>
        </div>
    </main>
    
    <!-- Background Music -->
    <audio id="background-music" preload="auto">
        <source src="https://www.chosic.com/wp-content/uploads/2020/07/The-Bards-Tale.mp3" type="audio/mp3">
        <source src="https://www.soundhelix.com/examples/mp3/SoundHelix-Song-1.mp3" type="audio/mp3">
        <source src="audio/fallback.mp3" type="audio/mp3">
        Your browser does not support the audio element.
    </audio>
    
    <!-- Sound test audio -->
    <audio id="test-sound" src="https://assets.codepen.io/3685267/success-sound-effect.mp3" preload="auto"></audio>
    
    <!-- Super compact music controls -->
    <div class="music-controls">
        <button id="music-play" title="Play">‚ñ∂</button>
        <button id="music-pause" title="Pause" style="display: none;">‚è∏</button>
        <button id="music-volume-up" title="Vol+">+</button>
        <button id="music-volume-down" title="Vol-">-</button>
        <button id="sound-test-button" title="Test">üîä</button>
    </div>

    <!-- Dark mode toggle button -->
    <div class="theme-toggle">
        <button id="theme-toggle-button" title="Toggle Light/Dark Mode">
            <span id="light-mode-icon">‚òÄÔ∏è</span>
            <span id="dark-mode-icon" style="display: none;">üåô</span>
        </button>
        <span id="theme-status">Light Mode</span>
    </div>

    <!-- Sound test dialog -->
    <div class="overlay" id="overlay" style="display: none;"></div>
    <div class="sound-test-dialog" id="sound-test-dialog" style="display: none;">
        <h2>Sound Test</h2>
        <p>Let's troubleshoot your audio issues:</p>
        
        <div>
            <label for="volume-slider">Volume:</label>
            <input type="range" id="volume-slider" min="0" max="1" step="0.1" value="1">
            <span id="volume-value">100%</span>
        </div>
        
        <button id="test-sound-button">Play Test Sound</button>
        <button id="test-music-button">Test Background Music</button>
        
        <div class="sound-test-results" id="sound-test-results">
            <p>Status: Ready to test</p>
        </div>
        
        <p>Common fixes:</p>
        <ul>
            <li>Check if your device volume is not muted</li>
            <li>Try using headphones</li>
            <li>Allow browser permission for audio</li>
            <li>Restart your browser</li>
        </ul>
        
        <button id="close-test-dialog">Close</button>
    </div>
    
    <script src="scripts/game.js"></script>
    <script src="scripts/theme.js"></script>
    <script>
        // Wait for full document load
        document.addEventListener('DOMContentLoaded', function() {
            // Background music controls
            const backgroundMusic = document.getElementById('background-music');
            const testSound = document.getElementById('test-sound');
            const playButton = document.getElementById('music-play');
            const pauseButton = document.getElementById('music-pause');
            const volumeUpButton = document.getElementById('music-volume-up');
            const volumeDownButton = document.getElementById('music-volume-down');
            const soundTestButton = document.getElementById('sound-test-button');
            const soundTestDialog = document.getElementById('sound-test-dialog');
            const overlay = document.getElementById('overlay');
            const closeTestDialogButton = document.getElementById('close-test-dialog');
            const testSoundButton = document.getElementById('test-sound-button');
            const testMusicButton = document.getElementById('test-music-button');
            const volumeSlider = document.getElementById('volume-slider');
            const volumeValue = document.getElementById('volume-value');
            const soundTestResults = document.getElementById('sound-test-results');
            
            let isMusicPlaying = false;
            
            // Music tracks
            const funnyBackgroundMusic = [
                "https://www.chosic.com/wp-content/uploads/2020/07/The-Bards-Tale.mp3",
                "https://www.soundhelix.com/examples/mp3/SoundHelix-Song-1.mp3",
                "https://www.chosic.com/wp-content/uploads/2020/05/Komiku_-_12_-_Bicycle.mp3",
                "https://www.chosic.com/wp-content/uploads/2021/01/Happy-Ukulele-Background-Music.mp3"
            ];
            
            // Set random music
            function setRandomFunnyMusic() {
                const randomIndex = Math.floor(Math.random() * funnyBackgroundMusic.length);
                backgroundMusic.src = funnyBackgroundMusic[randomIndex];
                
                // Add error handling for external sources
                backgroundMusic.onerror = function() {
                    console.log("Error loading external music, falling back to local file");
                    backgroundMusic.src = "audio/fallback.mp3";
                };
            }
            
            // Initialize with a random music track
            setRandomFunnyMusic();
            
            // Set initial volume
            backgroundMusic.volume = 1.0;
            testSound.volume = 1.0;
            
            // Update volume display
            volumeSlider.addEventListener('input', function() {
                const volume = this.value;
                backgroundMusic.volume = volume;
                testSound.volume = volume;
                volumeValue.textContent = `${Math.round(volume * 100)}%`;
            });
            
            // Play button functionality with error handling
            playButton.addEventListener('click', function() {
                playWithErrorHandling();
            });
            
            // Play with error handling
            function playWithErrorHandling() {
                const playPromise = backgroundMusic.play();
                
                if (playPromise !== undefined) {
                    playPromise.then(() => {
                        // Playback started successfully
                        isMusicPlaying = true;
                        playButton.style.display = 'none';
                        pauseButton.style.display = 'block';
                    }).catch(error => {
                        // Autoplay was prevented or another error occurred
                        console.error("Audio play failed:", error);
                        
                        // Open sound test dialog on error
                        openSoundTestDialog();
                    });
                }
            }
            
            // Pause button
            pauseButton.addEventListener('click', function() {
                backgroundMusic.pause();
                isMusicPlaying = false;
                playButton.style.display = 'block';
                pauseButton.style.display = 'none';
            });
            
            // Volume up button
            volumeUpButton.addEventListener('click', function() {
                backgroundMusic.volume = Math.min(1, backgroundMusic.volume + 0.1);
                testSound.volume = backgroundMusic.volume;
                volumeSlider.value = backgroundMusic.volume;
                volumeValue.textContent = `${Math.round(backgroundMusic.volume * 100)}%`;
            });
            
            // Volume down button
            volumeDownButton.addEventListener('click', function() {
                backgroundMusic.volume = Math.max(0, backgroundMusic.volume - 0.1);
                testSound.volume = backgroundMusic.volume;
                volumeSlider.value = backgroundMusic.volume;
                volumeValue.textContent = `${Math.round(backgroundMusic.volume * 100)}%`;
            });
            
            // Sound test functionality
            soundTestButton.addEventListener('click', openSoundTestDialog);
            
            function openSoundTestDialog() {
                overlay.style.display = 'block';
                soundTestDialog.style.display = 'block';
                
                // Update volume slider to match current volume
                volumeSlider.value = backgroundMusic.volume;
                volumeValue.textContent = `${Math.round(backgroundMusic.volume * 100)}%`;
            }
            
            // Close test dialog
            closeTestDialogButton.addEventListener('click', function() {
                overlay.style.display = 'none';
                soundTestDialog.style.display = 'none';
            });
            
            // Test sound button
            testSoundButton.addEventListener('click', function() {
                soundTestResults.innerHTML = '<p>Status: Testing sound...</p>';
                
                const testPlayPromise = testSound.play();
                if (testPlayPromise !== undefined) {
                    testPlayPromise.then(() => {
                        soundTestResults.innerHTML = '<p>Status: ‚úÖ Test sound played successfully!</p>';
                    }).catch(error => {
                        soundTestResults.innerHTML = `<p>Status: ‚ùå Test sound failed: ${error.message}</p>
                            <p>This is likely due to browser autoplay restrictions. Try clicking the button again.</p>`;
                    });
                }
            });
            
            // Test music button
            testMusicButton.addEventListener('click', function() {
                soundTestResults.innerHTML = '<p>Status: Testing background music...</p>';
                
                const musicPlayPromise = backgroundMusic.play();
                if (musicPlayPromise !== undefined) {
                    musicPlayPromise.then(() => {
                        isMusicPlaying = true;
                        playButton.style.display = 'none';
                        pauseButton.style.display = 'block';
                        soundTestResults.innerHTML = '<p>Status: ‚úÖ Background music playing successfully!</p>';
                    }).catch(error => {
                        soundTestResults.innerHTML = `<p>Status: ‚ùå Background music failed: ${error.message}</p>
                            <p>This is likely due to browser autoplay restrictions. Try clicking the button again.</p>`;
                    });
                }
            });
            
            // Set up music for start page
            document.getElementById('start-game-button').addEventListener('click', () => {
                // If music is not already playing, try to play it
                if (!isMusicPlaying) {
                    playWithErrorHandling();
                }
            });
            
            // Change music when title is clicked
            document.querySelector('.welcome-title-3d').addEventListener('click', () => {
                setRandomFunnyMusic();
                if (isMusicPlaying) {
                    playWithErrorHandling();
                }
            });
        });
    </script>
</body>
</html>